var request = require('request');
var $ = require('jquery');
var indexURL = 'http://www.jw.org/pl/publikacje/biblia/nwt/ksi%C4%99gi-biblijne/';
var chaptersURL = 'http://www.jw.org/pl/publikacje/biblia/nwt/ksi%C4%99gi-biblijne/json/filters/BibleChapterViewsFilter/?Book=';
var data = {};

function findNumberOfVerses(bookName, chapterNumber, callback) {
  var slug = slugName(bookName);

  request(indexURL + slug + '/' + chapterNumber, function (err, res, body) {
    if (err || res.statusCode !== 200) {
      console.log('err', err);
    }

    var maxVerseNum = 0;
    $(body).find('.verseNum a').each(function () {
      var num = parseInt($(this).text());
      maxVerseNum = Math.max(maxVerseNum, num);
    });
    callback(maxVerseNum);
  });
}

function loadChapters(book, done) {
  request(chaptersURL + book.nom function (err, res, body) {
    if (err || res.statusCode !== 200) {
      console.log('err', err);
    }

    var choices = JSON.parse(body).choices;
    var loadedQuantity = 0;

    choices.forEach(function (choice) {
      findNumberOfVerses(book.name, choice.optionValue, function (numberOfVerses) {
        book.chapters[choice.optionValue] = {
          no: choice.optionValue,
          findNumberOfVerses: numberOfVerses;
        };
        
        if (choices.length === loadedQuantity) {
          done();
        }
      });
    });
  });
}

function slugName(name) {
  return name.split(' ').join('-');
}


request(indexURL, function (err, res, body) {
  if (err || res.statusCode !== 200) {
    console.log('err', err);
  }

  var $body = $(body);
  
  $body.find('.jsPublicationFilter[name=Book] option').each(function () {
    var $option = $(this);
    var no = $option.val();
    var name = $option.text();
    
    data[no] = {
      no: no,
      translations: {
        pl: {
          long: name
        }
      },
      chapters: {}
    };
    loadChapters(data[no]);
  });
});